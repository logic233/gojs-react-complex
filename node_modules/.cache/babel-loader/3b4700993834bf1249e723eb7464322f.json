{"ast":null,"code":"// Copyright (C) 1998-2021 by Northwoods Software Corporation. All Rights Reserved.\nimport { __extends } from 'tslib';\nimport * as go from 'gojs';\nimport * as React from 'react';\n\nvar ReactDiagram = function (_super) {\n  __extends(ReactDiagram, _super);\n\n  function ReactDiagram(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.wasCleared = false;\n    _this.modelChangedListener = null;\n    _this.divRef = React.createRef();\n    return _this;\n  }\n\n  ReactDiagram.prototype.getDiagram = function () {\n    if (this.divRef.current === null) return null;\n    return go.Diagram.fromDiv(this.divRef.current);\n  };\n\n  ReactDiagram.prototype.clear = function () {\n    var diagram = this.getDiagram();\n\n    if (diagram !== null) {\n      diagram.clear();\n      this.wasCleared = true;\n    }\n  };\n\n  ReactDiagram.prototype.componentDidMount = function () {\n    var _this = this;\n\n    if (this.divRef.current === null) return;\n    var diagram = this.props.initDiagram();\n    diagram.div = this.divRef.current;\n\n    this.modelChangedListener = function (e) {\n      if (e.isTransactionFinished && e.model && !e.model.isReadOnly && _this.props.onModelChange) {\n        var dataChanges = e.model.toIncrementalData(e);\n        if (dataChanges !== null) _this.props.onModelChange(dataChanges);\n      }\n    };\n\n    diagram.addModelChangedListener(this.modelChangedListener);\n    diagram.delayInitialization(function () {\n      _this.mergeData(diagram, true);\n    });\n  };\n\n  ReactDiagram.prototype.componentWillUnmount = function () {\n    var diagram = this.getDiagram();\n\n    if (diagram !== null) {\n      diagram.div = null;\n\n      if (this.modelChangedListener !== null) {\n        diagram.removeModelChangedListener(this.modelChangedListener);\n        this.modelChangedListener = null;\n      }\n    }\n  };\n\n  ReactDiagram.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    if (nextProps.skipsDiagramUpdate) return false;\n    if (nextProps.nodeDataArray === this.props.nodeDataArray && nextProps.linkDataArray === this.props.linkDataArray && nextProps.modelData === this.props.modelData) return false;\n    return true;\n  };\n\n  ReactDiagram.prototype.componentDidUpdate = function (prevProps, prevState) {\n    var _this = this;\n\n    var diagram = this.getDiagram();\n\n    if (diagram !== null) {\n      if (this.wasCleared) {\n        diagram.delayInitialization(function () {\n          _this.mergeData(diagram, true);\n\n          _this.wasCleared = false;\n        });\n      } else {\n        this.mergeData(diagram, false);\n      }\n    }\n  };\n\n  ReactDiagram.prototype.mergeData = function (diagram, isInit) {\n    var _this = this;\n\n    var model = diagram.model;\n    model.commit(function (m) {\n      if (_this.props.modelData !== undefined) {\n        m.assignAllDataProperties(m.modelData, _this.props.modelData);\n      }\n\n      m.mergeNodeDataArray(_this.props.nodeDataArray);\n\n      if (_this.props.linkDataArray !== undefined && m instanceof go.GraphLinksModel) {\n        m.mergeLinkDataArray(_this.props.linkDataArray);\n      }\n    }, isInit ? null : 'merge data');\n  };\n\n  ReactDiagram.prototype.render = function () {\n    return React.createElement(\"div\", {\n      ref: this.divRef,\n      className: this.props.divClassName\n    });\n  };\n\n  return ReactDiagram;\n}(React.Component);\n\nvar ReactOverview = function (_super) {\n  __extends(ReactOverview, _super);\n\n  function ReactOverview(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.divRef = React.createRef();\n    return _this;\n  }\n\n  ReactOverview.prototype.getOverview = function () {\n    if (this.divRef.current === null) return null;\n    return go.Diagram.fromDiv(this.divRef.current);\n  };\n\n  ReactOverview.prototype.componentDidMount = function () {\n    if (this.divRef.current === null) return;\n    var overview;\n\n    if (this.props.initOverview !== undefined) {\n      overview = this.props.initOverview();\n    } else {\n      overview = new go.Overview();\n      overview.contentAlignment = go.Spot.Center;\n    }\n\n    overview.div = this.divRef.current;\n    overview.observed = this.props.observedDiagram;\n  };\n\n  ReactOverview.prototype.componentWillUnmount = function () {\n    var overview = this.getOverview();\n\n    if (overview !== null) {\n      overview.div = null;\n      overview.observed = null;\n    }\n  };\n\n  ReactOverview.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    if (nextProps.observedDiagram === this.props.observedDiagram) return false;\n    return true;\n  };\n\n  ReactOverview.prototype.componentDidUpdate = function (prevProps, prevState) {\n    var overview = this.getOverview();\n\n    if (overview !== null) {\n      overview.observed = this.props.observedDiagram;\n    }\n  };\n\n  ReactOverview.prototype.render = function () {\n    return React.createElement(\"div\", {\n      ref: this.divRef,\n      className: this.props.divClassName\n    });\n  };\n\n  return ReactOverview;\n}(React.Component);\n\nvar ReactPalette = function (_super) {\n  __extends(ReactPalette, _super);\n\n  function ReactPalette(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.wasCleared = false;\n    _this.divRef = React.createRef();\n    return _this;\n  }\n\n  ReactPalette.prototype.getPalette = function () {\n    if (this.divRef.current === null) return null;\n    return go.Diagram.fromDiv(this.divRef.current);\n  };\n\n  ReactPalette.prototype.clear = function () {\n    var palette = this.getPalette();\n\n    if (palette !== null) {\n      palette.clear();\n      this.wasCleared = true;\n    }\n  };\n\n  ReactPalette.prototype.componentDidMount = function () {\n    var _this = this;\n\n    if (this.divRef.current === null) return;\n    var palette = this.props.initPalette();\n    palette.div = this.divRef.current;\n    palette.delayInitialization(function () {\n      _this.mergeData(palette, true);\n    });\n  };\n\n  ReactPalette.prototype.componentWillUnmount = function () {\n    var palette = this.getPalette();\n\n    if (palette !== null) {\n      palette.div = null;\n    }\n  };\n\n  ReactPalette.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    if (nextProps.nodeDataArray === this.props.nodeDataArray && nextProps.linkDataArray === this.props.linkDataArray && nextProps.modelData === this.props.modelData) return false;\n    return true;\n  };\n\n  ReactPalette.prototype.componentDidUpdate = function (prevProps, prevState) {\n    var _this = this;\n\n    var palette = this.getPalette();\n\n    if (palette !== null) {\n      if (this.wasCleared) {\n        palette.delayInitialization(function () {\n          _this.mergeData(palette, true);\n\n          _this.wasCleared = false;\n        });\n      } else {\n        this.mergeData(palette, false);\n      }\n    }\n  };\n\n  ReactPalette.prototype.mergeData = function (diagram, isInit) {\n    var _this = this;\n\n    var model = diagram.model;\n    model.commit(function (m) {\n      if (_this.props.modelData !== undefined) {\n        m.assignAllDataProperties(m.modelData, _this.props.modelData);\n      }\n\n      m.mergeNodeDataArray(_this.props.nodeDataArray);\n\n      if (_this.props.linkDataArray !== undefined && m instanceof go.GraphLinksModel) {\n        m.mergeLinkDataArray(_this.props.linkDataArray);\n      }\n    }, isInit ? null : 'merge data');\n  };\n\n  ReactPalette.prototype.render = function () {\n    return React.createElement(\"div\", {\n      ref: this.divRef,\n      className: this.props.divClassName\n    });\n  };\n\n  return ReactPalette;\n}(React.Component);\n\nexport { ReactDiagram, ReactOverview, ReactPalette };","map":{"version":3,"sources":["C:/project/gojs-react-complex/node_modules/gojs-react/lib/esm/gojsreact.js"],"names":["__extends","go","React","ReactDiagram","_super","props","_this","call","wasCleared","modelChangedListener","divRef","createRef","prototype","getDiagram","current","Diagram","fromDiv","clear","diagram","componentDidMount","initDiagram","div","e","isTransactionFinished","model","isReadOnly","onModelChange","dataChanges","toIncrementalData","addModelChangedListener","delayInitialization","mergeData","componentWillUnmount","removeModelChangedListener","shouldComponentUpdate","nextProps","nextState","skipsDiagramUpdate","nodeDataArray","linkDataArray","modelData","componentDidUpdate","prevProps","prevState","isInit","commit","m","undefined","assignAllDataProperties","mergeNodeDataArray","GraphLinksModel","mergeLinkDataArray","render","createElement","ref","className","divClassName","Component","ReactOverview","getOverview","overview","initOverview","Overview","contentAlignment","Spot","Center","observed","observedDiagram","ReactPalette","getPalette","palette","initPalette"],"mappings":"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","sourcesContent":["// Copyright (C) 1998-2021 by Northwoods Software Corporation. All Rights Reserved.\nimport { __extends } from 'tslib';\nimport * as go from 'gojs';\nimport * as React from 'react';\n\nvar ReactDiagram = (function (_super) {\r\n    __extends(ReactDiagram, _super);\r\n    function ReactDiagram(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.wasCleared = false;\r\n        _this.modelChangedListener = null;\r\n        _this.divRef = React.createRef();\r\n        return _this;\r\n    }\r\n    ReactDiagram.prototype.getDiagram = function () {\r\n        if (this.divRef.current === null)\r\n            return null;\r\n        return go.Diagram.fromDiv(this.divRef.current);\r\n    };\r\n    ReactDiagram.prototype.clear = function () {\r\n        var diagram = this.getDiagram();\r\n        if (diagram !== null) {\r\n            diagram.clear();\r\n            this.wasCleared = true;\r\n        }\r\n    };\r\n    ReactDiagram.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        if (this.divRef.current === null)\r\n            return;\r\n        var diagram = this.props.initDiagram();\r\n        diagram.div = this.divRef.current;\r\n        this.modelChangedListener = function (e) {\r\n            if (e.isTransactionFinished && e.model && !e.model.isReadOnly && _this.props.onModelChange) {\r\n                var dataChanges = e.model.toIncrementalData(e);\r\n                if (dataChanges !== null)\r\n                    _this.props.onModelChange(dataChanges);\r\n            }\r\n        };\r\n        diagram.addModelChangedListener(this.modelChangedListener);\r\n        diagram.delayInitialization(function () {\r\n            _this.mergeData(diagram, true);\r\n        });\r\n    };\r\n    ReactDiagram.prototype.componentWillUnmount = function () {\r\n        var diagram = this.getDiagram();\r\n        if (diagram !== null) {\r\n            diagram.div = null;\r\n            if (this.modelChangedListener !== null) {\r\n                diagram.removeModelChangedListener(this.modelChangedListener);\r\n                this.modelChangedListener = null;\r\n            }\r\n        }\r\n    };\r\n    ReactDiagram.prototype.shouldComponentUpdate = function (nextProps, nextState) {\r\n        if (nextProps.skipsDiagramUpdate)\r\n            return false;\r\n        if (nextProps.nodeDataArray === this.props.nodeDataArray &&\r\n            nextProps.linkDataArray === this.props.linkDataArray &&\r\n            nextProps.modelData === this.props.modelData)\r\n            return false;\r\n        return true;\r\n    };\r\n    ReactDiagram.prototype.componentDidUpdate = function (prevProps, prevState) {\r\n        var _this = this;\r\n        var diagram = this.getDiagram();\r\n        if (diagram !== null) {\r\n            if (this.wasCleared) {\r\n                diagram.delayInitialization(function () {\r\n                    _this.mergeData(diagram, true);\r\n                    _this.wasCleared = false;\r\n                });\r\n            }\r\n            else {\r\n                this.mergeData(diagram, false);\r\n            }\r\n        }\r\n    };\r\n    ReactDiagram.prototype.mergeData = function (diagram, isInit) {\r\n        var _this = this;\r\n        var model = diagram.model;\r\n        model.commit(function (m) {\r\n            if (_this.props.modelData !== undefined) {\r\n                m.assignAllDataProperties(m.modelData, _this.props.modelData);\r\n            }\r\n            m.mergeNodeDataArray(_this.props.nodeDataArray);\r\n            if (_this.props.linkDataArray !== undefined && m instanceof go.GraphLinksModel) {\r\n                m.mergeLinkDataArray(_this.props.linkDataArray);\r\n            }\r\n        }, isInit ? null : 'merge data');\r\n    };\r\n    ReactDiagram.prototype.render = function () {\r\n        return (React.createElement(\"div\", { ref: this.divRef, className: this.props.divClassName }));\r\n    };\r\n    return ReactDiagram;\r\n}(React.Component));\n\nvar ReactOverview = (function (_super) {\r\n    __extends(ReactOverview, _super);\r\n    function ReactOverview(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.divRef = React.createRef();\r\n        return _this;\r\n    }\r\n    ReactOverview.prototype.getOverview = function () {\r\n        if (this.divRef.current === null)\r\n            return null;\r\n        return go.Diagram.fromDiv(this.divRef.current);\r\n    };\r\n    ReactOverview.prototype.componentDidMount = function () {\r\n        if (this.divRef.current === null)\r\n            return;\r\n        var overview;\r\n        if (this.props.initOverview !== undefined) {\r\n            overview = this.props.initOverview();\r\n        }\r\n        else {\r\n            overview = new go.Overview();\r\n            overview.contentAlignment = go.Spot.Center;\r\n        }\r\n        overview.div = this.divRef.current;\r\n        overview.observed = this.props.observedDiagram;\r\n    };\r\n    ReactOverview.prototype.componentWillUnmount = function () {\r\n        var overview = this.getOverview();\r\n        if (overview !== null) {\r\n            overview.div = null;\r\n            overview.observed = null;\r\n        }\r\n    };\r\n    ReactOverview.prototype.shouldComponentUpdate = function (nextProps, nextState) {\r\n        if (nextProps.observedDiagram === this.props.observedDiagram)\r\n            return false;\r\n        return true;\r\n    };\r\n    ReactOverview.prototype.componentDidUpdate = function (prevProps, prevState) {\r\n        var overview = this.getOverview();\r\n        if (overview !== null) {\r\n            overview.observed = this.props.observedDiagram;\r\n        }\r\n    };\r\n    ReactOverview.prototype.render = function () {\r\n        return (React.createElement(\"div\", { ref: this.divRef, className: this.props.divClassName }));\r\n    };\r\n    return ReactOverview;\r\n}(React.Component));\n\nvar ReactPalette = (function (_super) {\r\n    __extends(ReactPalette, _super);\r\n    function ReactPalette(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.wasCleared = false;\r\n        _this.divRef = React.createRef();\r\n        return _this;\r\n    }\r\n    ReactPalette.prototype.getPalette = function () {\r\n        if (this.divRef.current === null)\r\n            return null;\r\n        return go.Diagram.fromDiv(this.divRef.current);\r\n    };\r\n    ReactPalette.prototype.clear = function () {\r\n        var palette = this.getPalette();\r\n        if (palette !== null) {\r\n            palette.clear();\r\n            this.wasCleared = true;\r\n        }\r\n    };\r\n    ReactPalette.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        if (this.divRef.current === null)\r\n            return;\r\n        var palette = this.props.initPalette();\r\n        palette.div = this.divRef.current;\r\n        palette.delayInitialization(function () {\r\n            _this.mergeData(palette, true);\r\n        });\r\n    };\r\n    ReactPalette.prototype.componentWillUnmount = function () {\r\n        var palette = this.getPalette();\r\n        if (palette !== null) {\r\n            palette.div = null;\r\n        }\r\n    };\r\n    ReactPalette.prototype.shouldComponentUpdate = function (nextProps, nextState) {\r\n        if (nextProps.nodeDataArray === this.props.nodeDataArray &&\r\n            nextProps.linkDataArray === this.props.linkDataArray &&\r\n            nextProps.modelData === this.props.modelData)\r\n            return false;\r\n        return true;\r\n    };\r\n    ReactPalette.prototype.componentDidUpdate = function (prevProps, prevState) {\r\n        var _this = this;\r\n        var palette = this.getPalette();\r\n        if (palette !== null) {\r\n            if (this.wasCleared) {\r\n                palette.delayInitialization(function () {\r\n                    _this.mergeData(palette, true);\r\n                    _this.wasCleared = false;\r\n                });\r\n            }\r\n            else {\r\n                this.mergeData(palette, false);\r\n            }\r\n        }\r\n    };\r\n    ReactPalette.prototype.mergeData = function (diagram, isInit) {\r\n        var _this = this;\r\n        var model = diagram.model;\r\n        model.commit(function (m) {\r\n            if (_this.props.modelData !== undefined) {\r\n                m.assignAllDataProperties(m.modelData, _this.props.modelData);\r\n            }\r\n            m.mergeNodeDataArray(_this.props.nodeDataArray);\r\n            if (_this.props.linkDataArray !== undefined && m instanceof go.GraphLinksModel) {\r\n                m.mergeLinkDataArray(_this.props.linkDataArray);\r\n            }\r\n        }, isInit ? null : 'merge data');\r\n    };\r\n    ReactPalette.prototype.render = function () {\r\n        return (React.createElement(\"div\", { ref: this.divRef, className: this.props.divClassName }));\r\n    };\r\n    return ReactPalette;\r\n}(React.Component));\n\nexport { ReactDiagram, ReactOverview, ReactPalette };\n"]},"metadata":{},"sourceType":"module"}