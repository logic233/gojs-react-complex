[{"C:\\project\\gojs-react-complex\\src\\index.tsx":"1","C:\\project\\gojs-react-complex\\src\\App.tsx":"2","C:\\project\\gojs-react-complex\\src\\components\\DiagramWrapper.tsx":"3","C:\\project\\gojs-react-complex\\src\\components\\SelectionInspector.tsx":"4","C:\\project\\gojs-react-complex\\src\\GuidedDraggingTool.ts":"5","C:\\project\\gojs-react-complex\\src\\components\\InspectorRow.tsx":"6"},{"size":151,"mtime":1646098892449,"results":"7","hashOfConfig":"8"},{"size":11658,"mtime":1646116608206,"results":"9","hashOfConfig":"8"},{"size":5366,"mtime":1646026890952,"results":"10","hashOfConfig":"8"},{"size":3160,"mtime":1646102425324,"results":"11","hashOfConfig":"8"},{"size":20011,"mtime":1646026890952,"results":"12","hashOfConfig":"8"},{"size":1986,"mtime":1646039339572,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b3socp",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\project\\gojs-react-complex\\src\\index.tsx",[],"C:\\project\\gojs-react-complex\\src\\App.tsx",["28","29"],"C:\\project\\gojs-react-complex\\src\\components\\DiagramWrapper.tsx",[],["30","31"],"C:\\project\\gojs-react-complex\\src\\components\\SelectionInspector.tsx",["32"],"/*\r\n*  Copyright (C) 1998-2021 by Northwoods Software Corporation. All Rights Reserved.\r\n*/\r\n\r\nimport * as React from 'react';\r\n\r\nimport { InspectorRow } from './InspectorRow';\r\n\r\nimport './Inspector.css';\r\n\r\ninterface SelectionInspectorProps {\r\n  selectedData: any;\r\n  onInputChange: (id: string, value: string, isBlur: boolean) => void;\r\n}\r\n\r\nexport class SelectionInspector extends React.PureComponent<SelectionInspectorProps, {}> {\r\n  /**\r\n   * Render the object data, passing down property keys and values.\r\n   */\r\n  private renderObjectDetails() {\r\n    const selObj = this.props.selectedData;\r\n    console.log('selObj: ', selObj);\r\n    const dets = [];\r\n    for (const k in selObj) {\r\n      if(k==='para'){\r\n        continue;\r\n      }\r\n      const val = selObj[k];\r\n      const row = <InspectorRow\r\n                    key={k}\r\n                    id={k}\r\n                    value={val}\r\n                    onInputChange={this.props.onInputChange} />;\r\n      if (k === 'key') {\r\n        dets.unshift(row); // key always at start\r\n      } else {\r\n        dets.push(row);\r\n      }\r\n    }\r\n    return dets;\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div id='myInspectorDiv' className='inspector'>\r\n        <table>\r\n          <tbody>\r\n            {this.renderObjectDetails()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n//显示模型参数并且提供更改\r\nexport class DataInspector extends React.PureComponent<SelectionInspectorProps,{value?:Array<number>}> {\r\n  /**\r\n   * Render the object data, passing down property keys and values.\r\n   */\r\n\r\n\r\n\r\n   constructor(props: SelectionInspectorProps) {\r\n    super(props);\r\n    this.state = {value: new Array(100) };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(event: any) {    \r\n    console.log(this.state.value);\r\n    var i = event.target.name;\r\n    var newValue = this.state.value;\r\n    newValue![i]=event.target.value;\r\n    this.setState({value: newValue});  \r\n  }\r\n\r\n\r\n  private renderObjectDetails() {\r\n    const selObj = this.props.selectedData;\r\n    const para = selObj[\"para\"]\r\n    console.log(this.state.value);\r\n    const dets = [];\r\n    if (para == undefined){\r\n      return <p>this model has no paras</p>\r\n    }\r\n    else{\r\n      const row = \r\n        <tr>\r\n          <th>name</th>\r\n          <th>value</th>\r\n          <th>type</th>\r\n          <th>description</th>\r\n        </tr>       \r\n        dets.push(row)\r\n      for(let i=0;i<para.length;i++){\r\n        \r\n        const row =\r\n          <tr>\r\n            <td> {para[i][\"name\"]}</td>\r\n            <td><input name={i+\"\"} type=\"text\"  value={this.state.value![i]}  onChange={this.handleChange}/></td>\r\n            <td> {para[i][\"type\"]}</td>\r\n            <td> {para[i][\"anno\"]}</td>\r\n          </tr> \r\n        dets.push(row)\r\n      }\r\n    }\r\n    return dets;\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div id='myDataInspectorDiv' className='datainspector'>\r\n        <h1>parameters</h1>\r\n        <table  id='mytable'  >\r\n            {this.renderObjectDetails()}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}","C:\\project\\gojs-react-complex\\src\\GuidedDraggingTool.ts",[],"C:\\project\\gojs-react-complex\\src\\components\\InspectorRow.tsx",[],{"ruleId":"33","severity":1,"message":"34","line":12,"column":9,"nodeType":"35","messageId":"36","endLine":12,"endColumn":17},{"ruleId":"33","severity":1,"message":"37","line":281,"column":9,"nodeType":"35","messageId":"36","endLine":281,"endColumn":11},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":85,"column":14,"nodeType":"44","messageId":"45","endLine":85,"endColumn":16},"@typescript-eslint/no-unused-vars","'treeView' is defined but never used.","Identifier","unusedVar","'xx' is defined but never used.","no-native-reassign",["46"],"no-negated-in-lhs",["47"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]